{"_items":[{"id":"1ef7a9ba-0686-6376-9261-4d432c44a0e4","familyId":"5373CE651A638ED0D10341C0F89DDF6C","familyKey":"00ecdaf4ccb96dc2aa323a93a133510d","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"pages_2.html"},{"key":"location","value":"docs/search/pages_2.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"a9080e6f936947ffd48e1e3e9520914665de246070691120b636893542cbfe18"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAAQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6376-9261-4d432c44a0e4?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6376-9261-4d432c44a0e4/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6376-9261-4d432c44a0e4/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6367-9261-fd2bf7d49d0e","familyId":"CF1E54443AA938F00AF24B0999C0BCBA","familyKey":"038a90825b5d4facadfef4b38fd00a7d","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_13.html"},{"key":"location","value":"docs/search/functions_13.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"4e8cff6f643b01703267ad46a53f6bba8082e14b88d84d475a8da4caf772571e"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAAg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6367-9261-fd2bf7d49d0e?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6367-9261-fd2bf7d49d0e/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6367-9261-fd2bf7d49d0e/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6372-9261-39d013345250","familyId":"18ADD84D196B0D77999A2F27F8F6E03E","familyKey":"0a6b452ce1fccb8827bb8e2c30ed09b8","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"pages_0.html"},{"key":"location","value":"docs/search/pages_0.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"91f07a44d658f541cf625e4ce7bfed4213cdf7a4200b7ea2b7b0a0d92acb5467"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAAw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6372-9261-39d013345250?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6372-9261-39d013345250/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6372-9261-39d013345250/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6360-9261-3fb4c93fc7fd","familyId":"C8C12E708E62E2712D840780FCA88636","familyKey":"1c94bdc6417fcaf8a088746583a3b099","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_7.html"},{"key":"location","value":"docs/search/all_7.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"b35bdd7a31a04aadfd8efe5370ee9e766dd30b6bb929c7d3301c6823e0438a62"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAABA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6360-9261-3fb4c93fc7fd?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6360-9261-3fb4c93fc7fd/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6360-9261-3fb4c93fc7fd/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6368-9261-bdf474b8767e","familyId":"4BAAD463F93AC8F19E2BE159F657CD19","familyKey":"1fd46721205c394767b6a42b3701e6b6","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_2.html"},{"key":"location","value":"docs/search/functions_2.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"7e99c7c6c992cf80dfc2c798845cf95f318a02ff9cb6ebe24877abc9505770a1"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAABQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6368-9261-bdf474b8767e?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6368-9261-bdf474b8767e/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6368-9261-bdf474b8767e/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6375-9261-d3ac7bcf4176","familyId":"E7534114680C986F9DD27E297049A5EA","familyKey":"2278d063b0bcf84bd5282512082097a1","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_f.html"},{"key":"location","value":"docs/search/functions_f.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"efc8e0b067e27813108f6e9fb221d82c3c152d042f43f9e51e1e98e84f3662fc"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAABg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6375-9261-d3ac7bcf4176?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6375-9261-d3ac7bcf4176/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6375-9261-d3ac7bcf4176/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6359-9261-cbe060d9599e","familyId":"68B8696F1916D7EBDF94D2BFDDE19ECB","familyKey":"28fc63c1c30b67e16d338cf13c39f186","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_a.html"},{"key":"location","value":"docs/search/all_a.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"61000b8667171f918d9afe316c0d0559dae5bc5dae217a6a122fe349fde6779b"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAABw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6359-9261-cbe060d9599e?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6359-9261-cbe060d9599e/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6359-9261-cbe060d9599e/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6361-9261-0d46d5ac358a","familyId":"8E62A838BA94FE34935E32310A952A59","familyKey":"3096ba780f9975029eeea0e7980fa9a6","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_8.html"},{"key":"location","value":"docs/search/all_8.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"fc517c78ba9fd86f229f2e518d866728188a5d5a6f92c1be3f9084fccbe47e7f"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAACA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6361-9261-0d46d5ac358a?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6361-9261-0d46d5ac358a/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6361-9261-0d46d5ac358a/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6364-9261-a5f77d496cfc","familyId":"E021D37B90132E58B4C8AD33F51C9A0F","familyKey":"3437d6422709caefe931212df0c3e4ca","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"classes_0.html"},{"key":"location","value":"docs/search/classes_0.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"5f318121186effb3dfac3fdf52990260023d1a88fde2aba91bcde79799932be5"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAACQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6364-9261-a5f77d496cfc?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6364-9261-a5f77d496cfc/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6364-9261-a5f77d496cfc/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6370-9261-d7598b6af3dd","familyId":"784D4A3CCF48A289E91F9DAB66E9C7B6","familyKey":"35423bbfe9af1cc6a313b7c9780eb40e","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_a.html"},{"key":"location","value":"docs/search/functions_a.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"50200e111ef9c498e015fb5fe66b3a7bdb988e2c7c08f21a859991a4b1fb572c"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAACg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6370-9261-d7598b6af3dd?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6370-9261-d7598b6af3dd/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6370-9261-d7598b6af3dd/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-636e-9261-056d02418e2c","familyId":"D7F759DB697AE6DAB18D25920C275898","familyKey":"39f22dd37be7c19cdd45e6681fc46a31","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_5.html"},{"key":"location","value":"docs/search/functions_5.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"9ae60aa8deacefc96f2f0423c3c2151f78d7c0cb0d32c5a2a1a344fb25d153b9"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAACw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636e-9261-056d02418e2c?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636e-9261-056d02418e2c/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636e-9261-056d02418e2c/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-637d-9261-814ac52bcbe9","familyId":"FD5F84BFD02299879CB2C4FC39EED00C","familyKey":"41188b83fd6c228294d29b12b6350def","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_c.html"},{"key":"location","value":"docs/search/all_c.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"e603862e0a3d7a8d62572cb44e64a2c04a15e2ac432d3336bf08c0fdce195539"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAADA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637d-9261-814ac52bcbe9?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637d-9261-814ac52bcbe9/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637d-9261-814ac52bcbe9/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-636d-9261-ed4d544311a0","familyId":"3CE02A0BEB94BD4BDD504712445BA040","familyKey":"49423b396f9e5f620315098954bcceca","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_9.html"},{"key":"location","value":"docs/search/functions_9.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"69fec5b16a696bdf4bb492b800986d46fc739efafe21f7a18b42f4f493b03ece"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAADQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636d-9261-ed4d544311a0?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636d-9261-ed4d544311a0/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636d-9261-ed4d544311a0/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-635c-9261-ad9092906e50","familyId":"365A4FEB1595E24D038CE50BEAB0AD64","familyKey":"4df64468fb8bea8c862329f2bf340842","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_1.html"},{"key":"location","value":"docs/search/functions_1.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"5ec30c48611ffd78a8652b50d9845875e34ad2b8913eba5cefd037f44563e817"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAADg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635c-9261-ad9092906e50?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635c-9261-ad9092906e50/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635c-9261-ad9092906e50/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-637a-9261-e91caaf2e92c","familyId":"683507F41BE917E98A3B1EFDF3635710","familyKey":"5eef9f421d204623ef1b8262653a0247","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"pages_4.html"},{"key":"location","value":"docs/search/pages_4.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"ddecee72161b2d8261792bac7ae694c06d52742b89239534715d187b29b02ffd"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAADw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637a-9261-e91caaf2e92c?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637a-9261-e91caaf2e92c/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637a-9261-e91caaf2e92c/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-636c-9261-058fec50565e","familyId":"6A7EC1168D764D93B8CB207E4C61F430","familyKey":"6740295d9e7427df8305a1f9a0563afd","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_7.html"},{"key":"location","value":"docs/search/functions_7.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"196d4a8972a918c91121e20c67f36e8358457fcd5af134f4cf5d1ead476c33cc"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAEA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636c-9261-058fec50565e?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636c-9261-058fec50565e/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636c-9261-058fec50565e/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-637b-9261-df398350290d","familyId":"FF18F5543DC92F2834B8FDDF93B9F0D5","familyKey":"6df0dd7794340bb2c9b574462a31701f","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_12.html"},{"key":"location","value":"docs/search/all_12.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"fe0f659597e4fb608b6583ba48d4c4bf0b837a0ca1cfbee7e6aebc268b96b1cf"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAEQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637b-9261-df398350290d?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637b-9261-df398350290d/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637b-9261-df398350290d/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6362-9261-7598657c2d96","familyId":"8AC83DD89C38CB6A26BC31A9A709D632","familyKey":"6e7517861252d2d9477f650b1c0ae48c","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_b.html"},{"key":"location","value":"docs/search/all_b.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"bc4f64be5c7e054a00becb22a3842d670c37ed706f18ce51952258526d137d41"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAEg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6362-9261-7598657c2d96?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6362-9261-7598657c2d96/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6362-9261-7598657c2d96/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-637e-9261-c13a9710e3d3","familyId":"D418072D684681EDEEA8FA2C6C3638B0","familyKey":"71fc10cf1b438937fb74faeb6327e339","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_c.html"},{"key":"location","value":"docs/search/functions_c.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"ef6dc3070e4e6be91e2201d3c1b4917eec9ea08ed031d2d5cd7db13a63d5f648"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAEw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637e-9261-c13a9710e3d3?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637e-9261-c13a9710e3d3/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637e-9261-c13a9710e3d3/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6373-9261-1966967306a0","familyId":"0619E874259C8941C159217AEAB43298","familyKey":"7b58a9e4d21e26caec8bfa6a4a284cff","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_d.html"},{"key":"location","value":"docs/search/functions_d.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"075ebef91b326e47c3feec5657155292fe29da7cf0842773870d53029a8688ac"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAFA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6373-9261-1966967306a0?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6373-9261-1966967306a0/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6373-9261-1966967306a0/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-635d-9261-2189e3fef9e4","familyId":"C2A59066DA989DF3432562E3BA95CBB7","familyKey":"7bea10171934dde8d409027048f9f00d","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_3.html"},{"key":"location","value":"docs/search/all_3.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"0c97357b4ac4a83bd414ba984e4b943daa2b207aae3c8eac1f331ad19f7f9782"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAFQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635d-9261-2189e3fef9e4?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635d-9261-2189e3fef9e4/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635d-9261-2189e3fef9e4/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-636b-9261-412bc0165831","familyId":"2D95CF23363C5E107C4B234C395D8116","familyKey":"7f473f22c41234c612a6268766bebd65","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_4.html"},{"key":"location","value":"docs/search/functions_4.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"7c93ab50c78cabab9639977044a6be7ec4cb9dc243cca173777ac30342c6e53b"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAFg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636b-9261-412bc0165831?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636b-9261-412bc0165831/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636b-9261-412bc0165831/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6354-9261-4ded69ea0831","familyId":"8FAD953E4DA3390EF923A266F3FA03EF","familyKey":"83de212daf7c1366f5afb7a3cf34d1b0","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_13.html"},{"key":"location","value":"docs/search/all_13.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"adacc11d8601a9024ab113c54ac7d10d8b59fdda502e24b9861bfe7df9c3077f"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAFw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6354-9261-4ded69ea0831?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6354-9261-4ded69ea0831/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6354-9261-4ded69ea0831/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6358-9261-65729a1b460b","familyId":"5F192A2D4CDF4EDA734AC4CAC0D69475","familyKey":"86a6c781d5567ec4f05bd37c8a9fd244","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_0.html"},{"key":"location","value":"docs/search/functions_0.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"1cb08656502e6ff9a8eecd4217557dd3ec8834f308ce7223b2e40fdd43a795fa"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAGA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6358-9261-65729a1b460b?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6358-9261-65729a1b460b/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6358-9261-65729a1b460b/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6356-9261-839a9a2df3ba","familyId":"D2A9F877CFA861AAEC03F356F6EF6A47","familyKey":"86f66366b24b06e3ec7e48fe16c3c133","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_11.html"},{"key":"location","value":"docs/search/all_11.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"0b73bacabaa6ff4ff905c02bf6edaa881ca0a3ffc6caa46ba92e265da66ea961"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAGQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6356-9261-839a9a2df3ba?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6356-9261-839a9a2df3ba/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6356-9261-839a9a2df3ba/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-635f-9261-d77673ebf0d4","familyId":"64BFC2116E8B48FBA1BE9A6DD1561D30","familyKey":"8c254c5a792779d2ed9e330a09977235","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_5.html"},{"key":"location","value":"docs/search/all_5.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"a69891151d4a4e1024c29a164fb88e6d9b8176b3f9a58139aa3e95b7822b0255"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAGg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635f-9261-d77673ebf0d4?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635f-9261-d77673ebf0d4/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635f-9261-d77673ebf0d4/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6363-9261-db8f9a07bd7f","familyId":"C85E71CBAEAC7EBB133247ED5BD39F10","familyKey":"90e86df888804135a62dbe6d27b9996e","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_9.html"},{"key":"location","value":"docs/search/all_9.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"095343530fa124d56ca9f0a3c127f907cf30e1e3fa748d4ae422e6da95807e9c"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAGw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6363-9261-db8f9a07bd7f?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6363-9261-db8f9a07bd7f/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6363-9261-db8f9a07bd7f/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6371-9261-fbcb7017c4ee","familyId":"22D97D3E54AAF51312B4EFBEE9C94393","familyKey":"911881020bfcb9e0b8c23d60031dc757","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_e.html"},{"key":"location","value":"docs/search/functions_e.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"aaa0a2accbc6920db19894f3771663bf76bfccc4f1437cb8f938a6ff03a2ac44"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAHA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6371-9261-fbcb7017c4ee?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6371-9261-fbcb7017c4ee/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6371-9261-fbcb7017c4ee/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-636f-9261-0f2414bc01d3","familyId":"DF83B0410EE921C28B4FBC8F311D77E9","familyKey":"913dac822f00217c8dddada53ee58fd4","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_b.html"},{"key":"location","value":"docs/search/functions_b.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"5b5045f4cc28bacc21188cfc60eeed5962bedb735232d87916c31eaea20210b3"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAHQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636f-9261-0f2414bc01d3?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636f-9261-0f2414bc01d3/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636f-9261-0f2414bc01d3/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6377-9261-290962a492e0","familyId":"80CD6BF97E62A4BEC790A3506B628A32","familyKey":"9271e558e46bb61676a8f1688e81d038","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"pages_3.html"},{"key":"location","value":"docs/search/pages_3.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"375d21a93f5e3b7f851fca5a815057aa0c3bd2aa64b0f1992df9ee2b95a062d1"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAHg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6377-9261-290962a492e0?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6377-9261-290962a492e0/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6377-9261-290962a492e0/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6369-9261-81ef4c9b0b80","familyId":"F118DDAAF1E98B2119438F331EDC3383","familyKey":"9683bcd2957852d2332327c111eb7801","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_6.html"},{"key":"location","value":"docs/search/functions_6.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"6dc29389107f7b414327cde2bbed4f8a55855b3e9973944aa1b5b4c10ad2e716"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAHw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6369-9261-81ef4c9b0b80?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6369-9261-81ef4c9b0b80/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6369-9261-81ef4c9b0b80/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6374-9261-4d4de332bdde","familyId":"23CAA44C1CC81882C695CD32961D419B","familyKey":"a034d9c7d3fc8370e60ae1b6243b74f3","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"pages_1.html"},{"key":"location","value":"docs/search/pages_1.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"6846f93937ea5a99a01cbebbf76fda0eb0cca6f1c064585d2760d0d2a4d4c824"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAIA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6374-9261-4d4de332bdde?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6374-9261-4d4de332bdde/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6374-9261-4d4de332bdde/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6357-9261-151026e1cfec","familyId":"EE1625D8342A7C5FEFCBC3B1E28CD86D","familyKey":"a388ab3ceeff1dab00540fb9d6614019","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_10.html"},{"key":"location","value":"docs/search/all_10.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"d50eb6fab6f58775e8fe930083b190a5067ce2a11b5c719dd282b1b434e7ecde"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAIQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6357-9261-151026e1cfec?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6357-9261-151026e1cfec/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6357-9261-151026e1cfec/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-637c-9261-31963f35df45","familyId":"9A37E3A53343142FC602AFDA179CE440","familyKey":"adea0333c3abbcc168104c08c332c128","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_f.html"},{"key":"location","value":"docs/search/all_f.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"d79dbf24d1da8be762cf0a07ad828e9762d799afcdd2b7628f13234f515bf430"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAIg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637c-9261-31963f35df45?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637c-9261-31963f35df45/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-637c-9261-31963f35df45/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6351-9261-8529afd44b32","familyId":"AB1E7B41BF71719F2A696DFF1295F8AC","familyKey":"b717f93191b2dc0a5d84247c85015662","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_10.html"},{"key":"location","value":"docs/search/functions_10.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"162db2224f9213dd21511c34544c4ed9ee248e3e54d8e0e1128c42f5cdc65783"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAIw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6351-9261-8529afd44b32?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6351-9261-8529afd44b32/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6351-9261-8529afd44b32/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6378-9261-a11dfa94cc76","familyId":"77E5E12FC0671776615961202B7CBEDF","familyKey":"b9b457b674c7498cb9af000be92b5d11","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_2.html"},{"key":"location","value":"docs/search/all_2.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"32037ea74044a16478a1db7d9040354cd40743cb420f3e898fca4cbe15828886"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAJA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6378-9261-a11dfa94cc76?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6378-9261-a11dfa94cc76/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6378-9261-a11dfa94cc76/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-635a-9261-43b7c386c23c","familyId":"F1CC4FE9517EA3167C7C046704C874B2","familyKey":"ba2d3b83c46176198124a826b6b8ad73","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_8.html"},{"key":"location","value":"docs/search/functions_8.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"a7a0d168b5299308f57ca46be9e51ee2db016efac67340e58cc8ed2887e69217"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAJQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635a-9261-43b7c386c23c?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635a-9261-43b7c386c23c/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635a-9261-43b7c386c23c/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6365-9261-a522835ab076","familyId":"1DE9F9631C5FA99AC3F3411448D5096F","familyKey":"caefca0f50823fbc3cacf6852feaa08b","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_d.html"},{"key":"location","value":"docs/search/all_d.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"92df80c1e9e2417b8514ea0358e5cbc984b9aa286bdc4698be063ca611716f78"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAJg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6365-9261-a522835ab076?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6365-9261-a522835ab076/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6365-9261-a522835ab076/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-636a-9261-2f6b1440226f","familyId":"62684659F32CEF8211D8261A4602222B","familyKey":"ce630453349ab9719cb29cf9d99de31a","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_3.html"},{"key":"location","value":"docs/search/functions_3.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"f1afcf919ccf5a88d0a90379ce5a5184584afe7c6e5965d1f0353695c87360fd"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAJw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636a-9261-2f6b1440226f?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636a-9261-2f6b1440226f/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-636a-9261-2f6b1440226f/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6355-9261-bface7310270","familyId":"90C37EB81B0B1FFB29F81FFDF9B38786","familyKey":"d3983c3082f26465b650e24d32f1760e","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_1.html"},{"key":"location","value":"docs/search/all_1.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"64eefc69db2bbe6704e4b1123488fbe43e984f0f4badd9badb7b472c4d18664a"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAKA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6355-9261-bface7310270?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6355-9261-bface7310270/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6355-9261-bface7310270/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6352-9261-0bfc2d707488","familyId":"605C1CC3D79003DCFFDC24CF1EF3ABC4","familyKey":"d406d55f2fe943df7171bd3dceec9247","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_0.html"},{"key":"location","value":"docs/search/all_0.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"333ee39765e6c19a13fcf4742e231482a6f0827a6bfe78b92024958f78818464"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAKQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6352-9261-0bfc2d707488?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6352-9261-0bfc2d707488/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6352-9261-0bfc2d707488/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-635b-9261-134fee51e2e6","familyId":"E1A79F5473EDD74CBFB21DC8965F8576","familyKey":"d660be95cf1e08740301c95437a4585e","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_12.html"},{"key":"location","value":"docs/search/functions_12.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"e3667c0fcb67d7abfeeacd70068b74cc9502e4c510bc829fa14032ea3a8b6958"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAKg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635b-9261-134fee51e2e6?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635b-9261-134fee51e2e6/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635b-9261-134fee51e2e6/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6353-9261-e30e57321266","familyId":"F2637941A498FF434243EB87DB3F8689","familyKey":"e0eab08fcc6e51f812017f5f87dd3ecf","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_e.html"},{"key":"location","value":"docs/search/all_e.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"6fd8ab8169d21f1105c0241cd0c99ea73de23049e3919502da78546ca3e4b7f4"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAAKw==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6353-9261-e30e57321266?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6353-9261-e30e57321266/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6353-9261-e30e57321266/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6379-9261-971e40273746","familyId":"585D58E82DEB4D7338608466D55DF403","familyKey":"eb3545dc3c091ff8c013f86df668f9da","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_6.html"},{"key":"location","value":"docs/search/all_6.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"d032b8eac282734abb2e82850eb6d2ccd269182bd1a8484a3e6a8f6087e83a13"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAALA==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6379-9261-971e40273746?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6379-9261-971e40273746/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6379-9261-971e40273746/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-6366-9261-c9d75864f375","familyId":"8C862B404C46782B965174C8F1915638","familyKey":"f09cc3c46aca2d988227db4580657d8a","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"functions_11.html"},{"key":"location","value":"docs/search/functions_11.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"180f6cd35e8bf51d1510963644db7f72f81c64e18d2993cde9d4d819c898929a"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAALQ==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6366-9261-c9d75864f375?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6366-9261-c9d75864f375/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-6366-9261-c9d75864f375/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]},{"id":"1ef7a9ba-0686-635e-9261-9f2046bbd935","familyId":"D0A35A929866C177662579A4135A1A8B","familyKey":"f14fa34c52be00a05563d083d0f3e799","uploadSet":"a51202bd-7a0d-4e01-bf91-e8e2d654c932","type":{"id":"9e28a7a3-0a6b-f75e-c9e4-28062aa79f07","name":"unchecked_origin_of_message_event|javascript","_localized":{"name":"Improper Validation of Message Origin","otherDetail":[{"key":"description","value":"A 'message' handler does not check the origin of its received message event."},{"key":"remediation","value":"Always validate the origin of the handled event. Verify the sender's identity in the event origin using an allow-list of trusted origins.\n\nPerform the comparison of origins using an exact-match approach instead of a partial comparison of the beginning or the end to avoid possible bypasses. In addition to validating the origin, you should always verify the syntax of the received message. Check that the data format is correct and do not evaluate it as code. The code below is an example of a message event handler that validates the origin:\n```\nfunction message_handler(event) { \n\tif (event.origin == 'https://www.example.com') { //validates origin - only accept messages from https://www.example.com\n\t //TBD - perform additional validation of data format and content before using it\n consumeData( event.data );\n }\n\t//else - ignore messages from other origins\n}\nwindow.addEventListener( \"message\", message_handler );\n```\n\nFinally, it should be noted that if you do not expect to receive messages from other windows, do not add any event listeners for message events. This will completely remove this attack surface."}]}},"attributes":[{"key":"language","value":"JavaScript"},{"key":"filename","value":"all_4.html"},{"key":"location","value":"docs/search/all_4.html"},{"key":"local-effect","value":"An attacker can send arbitrary data via event messages, which may lead to DOM-XSS or other injection-based client-side security issues."},{"key":"line-number","value":27},{"key":"cwe","value":"CWE-346"},{"key":"coverity-events","value":"40b01365e8b9d486dcc76b168e0a9cedb2aa4c5956940e855391573379fd2fde"},{"key":"severity","value":"medium"}],"tenantId":"e1279832-8f57-4877-8dac-5397b61106ac","_cursor":"AAAALg==","_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635e-9261-9f2046bbd935?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_includeAttributes=true","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635e-9261-9f2046bbd935/snippet?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"snippet","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/1ef7a9ba-0686-635e-9261-9f2046bbd935/assist?portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184","rel":"issue-assist","method":"GET"}]}],"_links":[{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/_actions/list?testId=latest&_includeAttributes=true&portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_first=100","rel":"self","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/_actions/list?testId=latest&_includeAttributes=true&portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_first=100","rel":"first","method":"GET"},{"href":"https://poc.polaris.blackduck.com/api/specialization-layer-service/issues/_actions/list?testId=latest&_includeAttributes=true&portfolioSubItemId=48fe3db0-a5c5-481a-850f-3ffc1415b184&_last=100","rel":"last","method":"GET"}],"_collection":{"itemCount":46,"currentPage":1,"pageCount":1}}
